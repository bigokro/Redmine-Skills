<% matched_issues = SkillsMatcherHelper.find_available_issues(User.current) %>
<% filters = SkillsMatcherHelper.filters_for_user(User.current) %>
<h3><%=l(:label_available_to_me_issues)%> (<%= matched_issues.size %>)</h3>

<%= render :partial => 'skills_matcher/list_issues_simple', :locals => { :issues => matched_issues } %>

<!--
<p class="small"><%= link_to l(:label_find_qualifying_issues), :controller => 'skills_matcher',
														 :action => 'find_issues_by_filter',
														 :filter => filters %></p>
-->

<%= form_tag :controller => "skills_matcher", :action => :find_issues_by_filter %>
	<% count = 0 %>
	<% filters.each do |filter| %>
		<% count += 1 %>
		<%= hidden_field_tag "cb_#{count}", "1" %>
		<%= hidden_field_tag "skills_#{count}", filter.skill.nil? ? "nootherskills" : filter.skill.name %>
		<%= hidden_field_tag "operators_#{count}", "<=" %>
		<%= hidden_field_tag "levels_#{count}", filter.level %>
	<% end %>

<%= link_to l(:label_find_qualifying_issues), "#", :onclick => "this.parentNode.submit();" %>

<% content_for :header_tags do %>
<%= auto_discovery_link_tag(:atom, 
                            {:controller => 'issues', :action => 'index', :set_filter => 1,
                             :assigned_to_id => 'me', :format => 'atom', :key => User.current.rss_key},
                            {:title => l(:label_assigned_to_me_issues)}) %>
<% end %>
